---
import Logo from "@/components/icons/Logo.astro";
import HamburgerButton from "@/components/HamburgerButton.astro";
import { MOBILE_MENU_CONTENT_ID } from "@/consts/mobile-menu";
import { nav } from "@/consts/navigation";
import Footer from "@/sections/Footer.astro";

const pages = nav;
---

<header
  class="mb-10 h-16 lg:h-24 max-w-[100vw] lg:hidden w-full fixed top-0 left-0 z-[999] rounded-b-lg bg-opacity-95"
>
  <nav
    class="group flex h-full w-full items-center justify-between px-12 lg:justify-center"
  >
    <a href="/" class="block lg:hidden"><Logo class:list={"w-10"} /></a>
    <HamburgerButton class:list={"block lg:hidden"} id="menuButton" />
    <div
      class="fixed inset-0 z-[888] flex w-screen flex-col items-center overflow-x-auto bg-tertiary-900 px-10 lg:hidden"
      id={MOBILE_MENU_CONTENT_ID}
    >
      <aside class="flex min-h-16 w-full items-center justify-between relative">
        <span class="text-xl font-semibold uppercase text-primary-100">Men√∫</span>
        <HamburgerButton id="innerMenuButton" />
      </aside>
      <div class="flex pb-1 min-h-2 w-full items-center">
        <hr
          class="h-[2px] w-full border-t-0"
          style="background:linear-gradient(to right, transparent 0%, #FFDCBC 50%, transparent 100%)"
        />
      </div>
      <nav class="flex w-full flex-col items-center gap-5 pt-10">
        <div class="mt-10 flex w-full flex-col items-center gap-5">
          {
            pages.map(({ title, url }, key) => (
              <>
                <a
                  href={url}
                  class:list={[
                    "relative flex flex-col items-center justify-center gap-2 text-xl capitalize",
                  ]}
                  id={`navmob-link-${key}`}
                >
                  <span class="z-10 uppercase font-semibold">{title}</span>
                </a>
                <hr
                  class="h-[2px] w-full border-t-0"
                  style="background:linear-gradient(to right, transparent 0%, #FFDCBC  50%, transparent 100%)"
                />
              </>
            ))
          }
        </div>
        <div class="absolute bottom-0 ">
          <Footer />
        </div>
      </nav>
    </div>
  </nav>
  <div class="relative flex h-2 w-full flex-col items-center">
    <div
      class="gridBottomBarContainer absolute flex w-full items-center justify-between"
    >
      <div
        class="h-[2px] w-full rounded-l-[30%] border-t-0"
        style="background:linear-gradient(to right, transparent 3%, #FFDCBC 35%, #FFDCBC 100%)"
      >
      </div>
      <div
        class="h-[2px] w-full rounded-r-[30%] border-t-0 bg-secondary-100"
        style="background:linear-gradient(to left, transparent 3%, #FFDCBC 35%, #FFDCBC 100%);"
      >
      </div>
    </div>
  </div>
</header>

<style>
  .nav-item .background {
    position: absolute;
    inset: 0;
    width: 100%;
    height: 100%;
    opacity: 0;
    background: linear-gradient(
      to bottom,
      rgba(221, 221, 221, 20%) 0%,
      transparent 100%
    );
    transition: opacity 0.3s;
  }

  .nav-item:hover .background,
  .nav-item:focus .background {
    opacity: 1;
  }

  .focus-within-ring {
    @apply focus-within:ring-1 focus-within:ring-white focus-within:ring-offset-1;
  }

  #menuMobileContent {
    opacity: 0;
    pointer-events: none;
    transition: opacity 0.3s;
    scrollbar-gutter: stable;
  }

  #menuMobileContent.open {
    opacity: 1 !important;
    pointer-events: all;
  }

  .accent-drop-shadow {
    filter: drop-shadow(0px 0px 25px rgba(theme(colors.tertiary.shadow), 0.25));
  }

  .current-page {
  }
  .current-page:before {
    background: theme(colors.tertiary.900);
    width: 100%;
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    height: 8px;
  }

  .current-page-mob:before {
    background: theme(colors.primary.500);
    width: 10px;
    content: "";
    position: absolute;
    top: 50%;
    left: -20px;
    height: 10px;
    border-radius: 100%;
    transform: translateY(-50%);
  }

  .gridBottomBarContainer {
    grid-template-columns: 1fr 6rem 1fr;
    grid-template-rows: 4px;
  }

  @media (min-width: 1020px) {
    .gridBottomBarContainer {
      grid-template-columns: 1fr 9rem 1fr;
    }
  }
  @media (prefers-reduced-motion) {
    .nav-item .background {
      transition: opacity 0s;
    }

    .nav-item:hover .background,
    .nav-item:focus .background {
      opacity: 1;
    }

    #menuMobileContent {
      transition: opacity 0s;
    }
  }
</style>

<script>
  import { $ } from "@/lib/dom-selector";

  window.addEventListener("scroll", () => {
    const header = $("header");
    if (window.scrollY > 50) {
      header?.classList.add("bg-tertiary-900");
    } else {
      header?.classList.remove("bg-tertiary-900");
    }
  });

  function toggleMenu(
    nav: HTMLElement | null,
    menuMobileContent: HTMLElement | null
  ) {
    menuMobileContent?.classList.toggle("open");
    nav?.classList.toggle("open");
    document.body.classList.toggle("overflow-hidden");
    document.body.classList.toggle("lg:overflow-auto");
  }

  const nav = $("nav");
  const menuButton = $("#menuButton");
  const innerMenuButton = $("#innerMenuButton");
  const menuMobileContext = $("#menuMobileContent");

  menuButton?.addEventListener("hamburgerButtonClicked", () =>
    toggleMenu(nav, menuMobileContext)
  );
  innerMenuButton?.addEventListener("hamburgerButtonClicked", () =>
    toggleMenu(nav, menuMobileContext)
  );

  if (menuMobileContext?.classList.contains("open")) {
    toggleMenu(nav, menuMobileContext);
  }

  const navLinks = document.querySelectorAll(
    "nav div a"
  ) as NodeListOf<HTMLLinkElement>;
  const currentPage = window.location.href;

  navLinks.forEach((link) => {
    link.addEventListener("click", () => {
      setTimeout(() => {
        innerMenuButton?.click();
      }, 620);

      navLinks.forEach((link) => {
        link.classList.remove("text-primary-100");
      });
      link.classList.add("text-primary-100");
    });

    if (link.href === currentPage) {
      link.classList.add("text-primary-100");
    }
  });

  if (window.location.hash === "") {
    navLinks[0].classList.add("current-page-mob");
  }
</script>
